{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The template used to create an ECS Service from the ECS Console.",
  "Parameters": {
    "ECSAutoScalingGroupName": {
      "Type": "String",
      "Default": "ECSAutoScalingGroup"
    },
    "EC2CapacityProviderName": {
      "Type": "String",
      "Default": "EC2CapacityProvider"
    },
    "ECSClusterName": {
      "Type": "String",
      "Default": "kinetwall-cluster"
    },
    "ECSServiceName": {
      "Type": "String",
      "Default": "kinetwall-web"
    },
    "SecurityGroupIds": {
      "Type": "CommaDelimitedList",
      "Default": "sg-07cf9e40efbea21b4"
    },
    "SubnetIds": {
      "Type": "CommaDelimitedList",
      "Default": "subnet-0a4864dbc9f18b90c,subnet-031201275e808384a,subnet-0f3af0959ef3b3533"
    },
    "VpcID": {
      "Type": "String",
      "Default": "vpc-06e468fffee318e59"
    },
    "LoadBalancerName": {
      "Type": "String",
      "Default": "taglog-lb"
    },
    "IamRoleInstanceProfile": {
      "Type": "String",
      "Description": "Specifies the Name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance",
      "Default": "arn:aws:iam::654654419821:instance-profile/ecsInstanceRole"
    },
    "ECSWebServerTaskName": {
      "Type": "String",
      "Default": "ECSWebServerTask"
    },
    "LatestECSOptimizedAMIName": {
      "Description": "AMI ID",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
    }
  },
  "Resources": {
    "ECSWebServerTask": {
      "Type" : "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Name": "kinetwall",
            "Image": "public.ecr.aws/w4r8r5b8/kinetwall:latest",
            "Cpu": 0,
            "PortMappings": [
              {
                "Name": "server-port",
                "ContainerPort": 3000,
                "HostPort": 3000,
                "Protocol": "tcp",
                "AppProtocol": "http"
              }
            ],
            "Essential": true,
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": "kinetwall.c34omemmehyf.eu-north-1.rds.amazonaws.com"
              },
              {
                "Name": "DB_PASS",
                "Value": "IloCVN6M9D3qgfqdsrTu"
              },
              {
                "Name": "DB_SSL_OFF",
                "Value": "false"
              },
              {
                "Name": "ETH_PROVIDER_APIKEY",
                "Value": "tSPFiNpDtQdsHcd5TMX_qp3iV--J2r_a"
              }
            ],
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-create-group": "true",
                "awslogs-group": "/ecs/Web-server-lb",
                "awslogs-region": "eu-north-1",
                "awslogs-stream-prefix": "ecs"
              }
            }
          }
        ],
        "Family": "Web-server-lb",
        "ExecutionRoleArn": "arn:aws:iam::654654419821:role/ecsTaskExecutionRole",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "EC2"
        ],
        "Cpu": "512",
        "Memory": "614",
        "RuntimePlatform": {
          "CpuArchitecture": "X86_64",
          "OperatingSystemFamily": "LINUX"
        }
      }
    },
    "ECSLaunchTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
      "DependsOn": ["ECSClusterStack"],
      "Properties": {
        "LaunchTemplateData": {
          "ImageId": {
            "Ref": "LatestECSOptimizedAMIName"
          },
          "SecurityGroupIds": {
            "Ref": "SecurityGroupIds"
          },
          "KeyName": "taglog-ec2-login",
          "IamInstanceProfile": {
            "Arn": {
              "Ref": "IamRoleInstanceProfile"
            }
          },
          "UserData": {
            "Fn::Base64": {
              "Fn::Sub": [
                "#!/bin/bash \necho ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config;",
                {
                  "ClusterName": {
                    "Ref": "ECSClusterName"
                  }
                }
              ]
            }
          }
        }
      }
    },
    "ECSAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn": ["ECSClusterStack", "ECSLaunchTemplate"],
      "Properties": {
        "MinSize": 1,
        "MaxSize": 5,
        "DesiredCapacity": 1,
        "MixedInstancesPolicy": {
          "InstancesDistribution": {
            "OnDemandBaseCapacity": 0,
            "OnDemandPercentageAboveBaseCapacity": 0,
            "SpotAllocationStrategy": "price-capacity-optimized"
          },
          "LaunchTemplate": {
            "LaunchTemplateSpecification": {
              "LaunchTemplateId": {"Ref": "ECSLaunchTemplate"},
              "Version": { "Fn::GetAtt": [ "ECSLaunchTemplate", "LatestVersionNumber" ] }
            },
            "Overrides": [
              {
                "InstanceType": "t3.micro"
              }
            ]
          }
        },
        "VPCZoneIdentifier": {
          "Ref": "SubnetIds"
        }
      }
    },
    "EC2CapacityProvider": {
      "Type": "AWS::ECS::CapacityProvider",
      "DependsOn": ["ECSAutoScalingGroup"],
      "Properties": {
        "AutoScalingGroupProvider": {
          "AutoScalingGroupArn": {"Ref": "ECSAutoScalingGroup"},
          "ManagedScaling": {
            "Status": "ENABLED",
            "TargetCapacity": 100
          },
          "ManagedTerminationProtection": "DISABLED"
        }
      }
    },
    "ECSClusterStack": {
      "Type" : "AWS::ECS::Cluster",
      "Properties" : {
        "ClusterName": {
          "Ref": "ECSClusterName"
        },
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "disabled"
          }
        ]
      }
    },
    "ClusterCPAssociation": {
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
      "DependsOn": ["ECSClusterStack", "EC2CapacityProvider"],
      "Properties": {
        "Cluster": {
          "Ref": "ECSClusterName"
        },
        "CapacityProviders": [
          {
            "Ref": "EC2CapacityProvider"
          }
        ],
        "DefaultCapacityProviderStrategy": [
          {
            "Base": 0,
            "Weight": 1,
            "CapacityProvider": {
              "Ref": "EC2CapacityProvider"
            }
          }
        ]
      }
    },
    "ECSService": {
      "Type": "AWS::ECS::Service",
      "DependsOn": ["ECSWebServerTask","ECSClusterStack", "ECSAutoScalingGroup"],
      "Properties": {
        "Cluster": {"Ref":  "ECSClusterName"},
        "TaskDefinition": { "Ref": "ECSWebServerTask" },
        "ServiceName": "kinetwall-web",
        "SchedulingStrategy": "REPLICA",
        "DesiredCount": 1,
        "LoadBalancers": [
          {
            "ContainerName": "kinetwall",
            "ContainerPort": 3000,
            "LoadBalancerName": {
              "Ref": "AWS::NoValue"
            },
            "TargetGroupArn": "arn:aws:elasticloadbalancing:eu-north-1:654654419821:targetgroup/taglog-ips/482ee7815c025f6a"
          }
        ],
        "HealthCheckGracePeriodSeconds": "60",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "SecurityGroups": {
              "Ref": "SecurityGroupIds"
            },
            "Subnets": {
              "Ref": "SubnetIds"
            }
          }
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100,
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": false
          }
        },
        "DeploymentController": {
          "Type": "ECS"
        },
        "ServiceConnectConfiguration": {
          "Enabled": false
        },
        "PlacementStrategies": [
          {
            "Field": "attribute:ecs.availability-zone",
            "Type": "spread"
          },
          {
            "Field": "instanceId",
            "Type": "spread"
          }
        ],
        "PlacementConstraints": [],
        "Tags": [],
        "EnableECSManagedTags": true
      }
    }
  },
  "Outputs": {
    "ECSService": {
      "Description": "The created service.",
      "Value": {
        "Ref": "ECSService"
      }
    }
  }
}